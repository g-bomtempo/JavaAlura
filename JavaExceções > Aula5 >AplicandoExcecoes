//Conta

public abstract class Conta{
	
	protected double saldo;
	private int agencia;
	private int numero;
	private Cliente titular;
	private static int total;

	
	public Conta(int agencia, int numero) {
		Conta.total++;
		System.out.println("Já foram criadas " + Conta.total + " contas");
		this.agencia = agencia;
		this.numero = numero;
	}
	
	public abstract void deposita(double valor);
	
	public void saca(double valor) throws SaldoInsuficienteException {	
		
		if (this.saldo < valor) {
			throw new SaldoInsuficienteException("Saldo : " + this.saldo + ", Valor: " + valor);
		} 
		this.saldo -= valor;
	}
	
	public void transfere(double valor, Conta destino) throws SaldoInsuficienteException {
		this.saca(valor);
		destino.deposita(valor);	
	}
	
	public double getSaldo() {
		return this.saldo;
	}
	
	public int getAgencia() {		
		return this.getAgencia();
	}
	
	public void setAgencia(int agencia) {
		if (agencia <= 0 ) {
			System.out.println("Agencia não pode ser um número negativo");
			return;
		}
		this.agencia = agencia;		
	}
	
	public int getNumero() {
		return this.numero;
	}
	
	public void setNumero(int numero) {
		if (numero <= 0) {
			System.out.println("Numero não pode ser negativo");
			return;
		}
		this.numero = numero;
	}
	
	public Cliente getTitular() {
		return this.titular;
	}
	
	public void setTitular(Cliente titular) {
		this.titular = titular;
	}
	
	public static int getTotal() {
		return Conta.total;
	}	
	
}

//SaldoInsuficienteException


public class SaldoInsuficienteException extends Exception {
	
	public SaldoInsuficienteException(String msg) {
		super(msg);
	}

}

//ContaCorrente


public class ContaCorrente extends Conta {

	public ContaCorrente(int agencia, int numero) {
		super(agencia, numero);		
	}
	
	@Override
	public void saca(double valor) throws SaldoInsuficienteException {
		double valorASacar = valor + 0.2;
		super.saca(valorASacar);
	}

	@Override
	public void deposita(double valor) {
		super.saldo = super.saldo + valor;		
	}
	
}
	

//TesteContas


public class TesteContas {

	public static void main(String[] args) throws SaldoInsuficienteException {
		
		ContaCorrente cc = new ContaCorrente(111, 111);
		ContaPoupanca cp = new ContaPoupanca(111, 112);
		
		cc.deposita(100);
		cp.deposita(100);
		
		cc.transfere(50, cp);
		
		try {
			cc.saca(1000);
		} catch(Exception ex) {
			System.out.println("EX: " + ex.getMessage());
		}
		
		
		System.out.println("Valor da conta cc é " + cc.getSaldo());
		System.out.println("Valor da conta cp é " + cp.getSaldo());
		
		

	}

}
